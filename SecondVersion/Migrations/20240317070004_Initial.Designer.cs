// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SecondVersion.Configurations;

#nullable disable

namespace SecondVersion.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240317070004_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesEnrolledId")
                        .HasColumnType("integer");

                    b.Property<int>("StudentsEnrolledId")
                        .HasColumnType("integer");

                    b.HasKey("CoursesEnrolledId", "StudentsEnrolledId");

                    b.HasIndex("StudentsEnrolledId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("SecondVersion.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasDefaultValue("https://buzookod.ru/media/2816616767_vubrbeJ.jpg");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasDefaultValue("None");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "B"
                        });
                });

            modelBuilder.Entity("SecondVersion.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasDefaultValue("None");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasDefaultValue("None");

                    b.Property<double>("Rating")
                        .HasColumnType("double precision");

                    b.Property<int>("TeacherId")
                        .HasColumnType("integer");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasDefaultValue("None");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("SecondVersion.Entities.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentUrl")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasDefaultValue("http://localhost:3000/");

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.Property<double>("Duration")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasDefaultValue("None");

                    b.Property<short>("Ordinal")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("SecondVersion.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasAlternateKey("Login");

                    b.ToTable("Users");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("SecondVersion.Entities.Student", b =>
                {
                    b.HasBaseType("SecondVersion.Entities.User");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasDefaultValue("None");

                    b.ToTable("students", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "123",
                            Password = "AQAAAAIAAYagAAAAEKrrzv9jics36HK8Kr41WOB1ABpHWj7l5mkjb6vjTYsr2ed37XcXhvwOg1DZu9DQDA==",
                            Role = 0,
                            Name = "Student A"
                        },
                        new
                        {
                            Id = 2,
                            Login = "1234",
                            Password = "AQAAAAIAAYagAAAAEJt2WWUvKss8JGSEb3B5GB413Kn7oWN8wP5PYB6JVyEewQon8LW2mNBUNL6B+1mM2g==",
                            Role = 0,
                            Name = "Student B"
                        },
                        new
                        {
                            Id = 3,
                            Login = "12345",
                            Password = "AQAAAAIAAYagAAAAEEgOUtgHZwPyhMo3Gn3DenvFLSpwxQXJnFHqlY8b13bNp5nNOd0XQbzZpVEx728/JA==",
                            Role = 0,
                            Name = "Student C"
                        });
                });

            modelBuilder.Entity("SecondVersion.Entities.Teacher", b =>
                {
                    b.HasBaseType("SecondVersion.Entities.User");

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasDefaultValue("None");

                    b.HasIndex("CompanyId");

                    b.ToTable("teachers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Login = "123456",
                            Password = "AQAAAAIAAYagAAAAENCkXGMPAG42UQQOl9MV70PNZ9iB3Zlu00FaF/b8dw7Rp40TWcXLI/TXQdOxK4WsZw==",
                            Role = 0,
                            CompanyId = 1,
                            Name = "Teacher A"
                        },
                        new
                        {
                            Id = 5,
                            Login = "1234567",
                            Password = "AQAAAAIAAYagAAAAEAHhaV1+AstHj9W0NlI+97SO6qzfEh76kSwYh1NXa337xxQaUzVg6eglr9gWTmTV4Q==",
                            Role = 0,
                            CompanyId = 2,
                            Name = "Teacher B"
                        });
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("SecondVersion.Entities.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesEnrolledId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecondVersion.Entities.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsEnrolledId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SecondVersion.Entities.Course", b =>
                {
                    b.HasOne("SecondVersion.Entities.Teacher", "Teacher")
                        .WithMany("CoursesPublished")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("SecondVersion.Entities.Module", b =>
                {
                    b.HasOne("SecondVersion.Entities.Course", "Course")
                        .WithMany("Modules")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("SecondVersion.Entities.Student", b =>
                {
                    b.HasOne("SecondVersion.Entities.User", null)
                        .WithOne()
                        .HasForeignKey("SecondVersion.Entities.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SecondVersion.Entities.Teacher", b =>
                {
                    b.HasOne("SecondVersion.Entities.Company", "Company")
                        .WithMany("Teachers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecondVersion.Entities.User", null)
                        .WithOne()
                        .HasForeignKey("SecondVersion.Entities.Teacher", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("SecondVersion.Entities.Company", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("SecondVersion.Entities.Course", b =>
                {
                    b.Navigation("Modules");
                });

            modelBuilder.Entity("SecondVersion.Entities.Teacher", b =>
                {
                    b.Navigation("CoursesPublished");
                });
#pragma warning restore 612, 618
        }
    }
}
